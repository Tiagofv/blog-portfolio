name: Laravel

on:
  push:
    branches: [ master ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
  laravel-rsync-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: 'echo "$env" > .env'
        shell: bash
        env:
          env: ${{secrets.ENV}}
      - uses: MilesChou/composer-action/7.3/install@master
      - run: |
          php artisan key:generate --ansi


      - name: Pull Docker image
        run: |
          docker pull "node:lts-slim"
          npm install
      - name: Laravel Rsync Deploy
        uses: SHSharkar/Laravel-Rsync-Deploy@master
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "--ignore-times --compress --verbose --exclude=.git --exclude=.github --exclude=node_modules --no-perms --no-owner --no-group --recursive"
          REMOTE_HOST: ${{ secrets.IP }}
          REMOTE_HOST_PORT: ${{ secrets.PORT }}
          REMOTE_USER: ${{ secrets.USER }}
          TARGET_DIRECTORY: ${{ secrets.DIRECTORY }}
      - name: Restart Docker containers
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: cd {{secrets.DIRECTORY}} && docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d --force-recreate
          host: ${{ secrets.IP }}
          username: ${{ secrets.USER }}
          privateKey: ${{ secrets.SSH_PRIVATE_KEY }}
